# GameLang 游戏模块示例
# 演示如何使用 import 导入游戏开发模块

# 导入游戏模块
import game

# 创建扫雷游戏
游戏 = 创建游戏(大小="10x10", 地雷数=15)

# 定义事件处理函数
fn 格子被点击(位置, 按钮):
    if 按钮 == "左键":
        if 有地雷(游戏, 位置):
            游戏结束("踩雷")
        else:
            显示数字 = 计算附近地雷数(游戏, 位置)
            显示格子(游戏, 位置, 显示数字)
            
            if 显示数字 == 0:
                自动展开相邻空格(位置)
    
    if 按钮 == "右键":
        切换标记(游戏, 位置)
    
    if 胜利(游戏):
        游戏结束("胜利")

# 自动展开函数
fn 自动展开相邻空格(位置):
    相邻位置列表 = 邻居(位置)
    for 相邻位置 in 相邻位置列表:
        if 未揭开(游戏, 相邻位置) and not 已标记(相邻位置):
            显示数字 = 计算附近地雷数(游戏, 相邻位置)
            显示格子(游戏, 相邻位置, 显示数字)
            
            if 显示数字 == 0:
                自动展开相邻空格(相邻位置)

# 标记检查函数
fn 已标记(位置):
    return False  # 简化实现

# 显示游戏窗口
显示游戏窗口(游戏)

# 测试游戏功能
print("=== 扫雷游戏测试 ===")
print("游戏已创建，大小:", 游戏.大小)
print("地雷数:", 游戏.地雷数)

# 模拟点击事件
格子被点击("A1", "左键")
格子被点击("B2", "右键")
格子被点击("C3", "左键")

print("游戏测试完成！") 