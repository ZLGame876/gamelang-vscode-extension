{
  "name": "gamelang",
  "displayName": "GameLang - Game Programming Language",
  "description": "Complete support for GameLang programming language with syntax highlighting, IntelliSense, debugging, and AI integration",
      "version": "1.3.9",
  "publisher": "gamelang-team",
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "Programming Languages",
    "Debuggers",
    "Snippets",
    "Other"
  ],
  "keywords": [
    "gamelang",
    "game",
    "programming",
    "language",
    "chinese",
    "ai",
    "debugging",
    "syntax-highlighting"
  ],
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#2C3E50",
    "theme": "dark"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ZLGame876/gamelang-vscode-extension.git"
  },
  "homepage": "https://github.com/ZLGame876/gamelang-vscode-extension#readme",
  "bugs": {
    "url": "https://github.com/ZLGame876/gamelang-vscode-extension/issues"
  },
  "license": "MIT",
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "gamelang",
        "aliases": [
          "GameLang",
          "gamelang"
        ],
        "extensions": [
          ".ln"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "gamelang",
        "scopeName": "source.gamelang",
        "path": "./syntaxes/gamelang.tmLanguage.json"
      }
    ],
    "iconThemes": [
      {
        "id": "gamelang-icons",
        "label": "GameLang Icons",
        "path": "./icons/gamelang-icon-theme.json"
      }
    ],
    "commands": [
      {
        "command": "gamelang.runFile",
        "title": "Run GameLang File",
        "category": "GameLang"
      },
      {
        "command": "gamelang.aiGenerate",
        "title": "AI Generate Code",
        "category": "GameLang"
      },
      {
        "command": "gamelang.aiExplain",
        "title": "AI Explain Code",
        "category": "GameLang"
      },
      {
        "command": "gamelang.aiOptimize",
        "title": "AI Optimize Code",
        "category": "GameLang"
      },
      {
        "command": "gamelang.aiRefactor",
        "title": "AI Refactor Code",
        "category": "GameLang"
      },
      {
        "command": "gamelang.searchBuiltin",
        "title": "Search Builtin Functions",
        "category": "GameLang"
      },
      {
        "command": "gamelang.formatCode",
        "title": "Format Code",
        "category": "GameLang"
      },
      {
        "command": "gamelang.lintCode",
        "title": "Lint Code",
        "category": "GameLang"
      },
      {
        "command": "gamelang.startDebug",
        "title": "Start Debugging",
        "category": "GameLang"
      },
      {
        "command": "gamelang.toggleBreakpoint",
        "title": "Toggle Breakpoint",
        "category": "GameLang"
      },
      {
        "command": "gamelang.showVariables",
        "title": "Show Variables",
        "category": "GameLang"
      },
      {
        "command": "gamelang.debugConsole",
        "title": "Debug Console",
        "category": "GameLang"
      }
    ],
    "debuggers": [
      {
        "type": "gamelang",
        "label": "GameLang",
        "program": "./out/debugger.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": ["program"],
            "properties": {
              "program": {
                "type": "string",
                "description": "GameLang program to debug"
              },
              "console": {
                "type": "string",
                "enum": ["internalConsole", "integratedTerminal"],
                "default": "integratedTerminal",
                "description": "Where to launch the program"
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "name": "Launch GameLang File",
            "type": "gamelang",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal"
          }
        ]
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "gamelang.runFile",
          "when": "resourceExtname == .ln"
        },
        {
          "command": "gamelang.aiGenerate",
          "when": "resourceExtname == .ln"
        },
        {
          "command": "gamelang.aiExplain",
          "when": "resourceExtname == .ln && editorHasSelection"
        },
        {
          "command": "gamelang.aiOptimize",
          "when": "resourceExtname == .ln && editorHasSelection"
        },
        {
          "command": "gamelang.aiRefactor",
          "when": "resourceExtname == .ln && editorHasSelection"
        },
        {
          "command": "gamelang.searchBuiltin",
          "when": "resourceExtname == .ln"
        },
        {
          "command": "gamelang.formatCode",
          "when": "resourceExtname == .ln"
        },
        {
          "command": "gamelang.lintCode",
          "when": "resourceExtname == .ln"
        }
      ],
      "editor/context": [
        {
          "command": "gamelang.runFile",
          "when": "resourceExtname == .ln",
          "group": "1_modification"
        },
        {
          "command": "gamelang.aiGenerate",
          "when": "resourceExtname == .ln",
          "group": "1_modification"
        },
        {
          "command": "gamelang.aiExplain",
          "when": "resourceExtname == .ln && editorHasSelection",
          "group": "1_modification"
        },
        {
          "command": "gamelang.aiOptimize",
          "when": "resourceExtname == .ln && editorHasSelection",
          "group": "1_modification"
        },
        {
          "command": "gamelang.aiRefactor",
          "when": "resourceExtname == .ln && editorHasSelection",
          "group": "1_modification"
        },
        {
          "command": "gamelang.searchBuiltin",
          "when": "resourceExtname == .ln",
          "group": "1_modification"
        },
        {
          "command": "gamelang.formatCode",
          "when": "resourceExtname == .ln",
          "group": "1_modification"
        },
        {
          "command": "gamelang.lintCode",
          "when": "resourceExtname == .ln",
          "group": "1_modification"
        }
      ]
    },
    "keybindings": [
      {
        "command": "gamelang.runFile",
        "key": "ctrl+shift+r",
        "when": "resourceExtname == .ln"
      },
      {
        "command": "gamelang.aiGenerate",
        "key": "ctrl+shift+g",
        "when": "resourceExtname == .ln"
      },
      {
        "command": "gamelang.searchBuiltin",
        "key": "cmd+u",
        "when": "resourceExtname == .ln"
      },
      {
        "command": "gamelang.formatCode",
        "key": "shift+alt+f",
        "when": "resourceExtname == .ln"
      },
      {
        "command": "gamelang.lintCode",
        "key": "ctrl+shift+l",
        "when": "resourceExtname == .ln"
      },
      {
        "command": "gamelang.runWithF5",
        "key": "f5",
        "when": "resourceExtname == .ln"
      },
      {
        "command": "gamelang.toggleBreakpoint",
        "key": "f9",
        "when": "resourceExtname == .ln"
      },
      {
        "command": "gamelang.showVariables",
        "key": "ctrl+shift+v",
        "when": "resourceExtname == .ln"
      },
      {
        "command": "gamelang.debugConsole",
        "key": "ctrl+shift+y",
        "when": "resourceExtname == .ln"
      }
    ],
    "snippets": [
      {
        "language": "gamelang",
        "path": "./snippets/gamelang.json"
      }
    ],

    "configuration": {
      "title": "GameLang",
      "properties": {
        "gamelang.interpreterPath": {
          "type": "string",
          "default": "./gamelang_mac",
          "description": "Path to GameLang interpreter"
        },
        "gamelang.aiApiKey": {
          "type": "string",
          "description": "OpenAI API Key for AI features"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/node": "^16.0.0",
    "@types/vscode": "^1.60.0",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.0",
    "typescript": "^4.5.0"
  },
  "dependencies": {
    "canvas": "^3.1.2",
    "child_process": "^1.0.2"
  }
}
